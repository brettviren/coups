File    = table
Product = wirecell
Group:

Flavor = ANY
Qualifiers = "c7:prof"

  Action = DefineFQ
    envSet (WIRECELL_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-c7-prof)

  Action = ExtraSetup
    setupRequired(spdlog v1_8_2 -q +c7:+prof)
    setupRequired(root v6_22_08d -q +c7:+p392:+prof)
    setupRequired(boost v1_75_0 -q +c7:+prof)
    setupRequired(jsoncpp v1_7_7e -q +c7:+prof)
    setupRequired(jsonnet v0_17_0a -q +c7:+prof)
    setupRequired(tbb v2021_1_1 -q +c7)
    setupRequired(hdf5 v1_12_0b -q +c7:+prof)
    setupRequired(clang v7_0_0)

Flavor = ANY
Qualifiers = "c7:debug"

  Action = DefineFQ
    envSet (WIRECELL_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-c7-debug)

  Action = ExtraSetup
    setupRequired(spdlog v1_8_2 -q +c7:+debug)
    setupRequired(root v6_22_08d -q +c7:+p392:+debug)
    setupRequired(boost v1_75_0 -q +c7:+debug)
    setupRequired(jsoncpp v1_7_7e -q +c7:+debug)
    setupRequired(jsonnet v0_17_0a -q +c7:+debug)
    setupRequired(tbb v2021_1_1 -q +c7)
    setupRequired(hdf5 v1_12_0b -q +c7:+debug)
    setupRequired(clang v7_0_0)

Flavor = ANY
Qualifiers = "e20:prof"

  Action = DefineFQ
    envSet (WIRECELL_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-e20-prof)

  Action = ExtraSetup
    setupRequired(spdlog v1_8_2 -q +e20:+prof)
    setupRequired(root v6_22_08d -q +e20:+p392:+prof)
    setupRequired(boost v1_75_0 -q +e20:+prof)
    setupRequired(jsoncpp v1_7_7e -q +e20:+prof)
    setupRequired(jsonnet v0_17_0a -q +e20:+prof)
    setupRequired(tbb v2021_1_1 -q +e20)
    setupRequired(hdf5 v1_12_0b -q +e20:+prof)
    setupRequired(gcc v9_3_0)

Flavor = ANY
Qualifiers = "e20:debug"

  Action = DefineFQ
    envSet (WIRECELL_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-e20-debug)

  Action = ExtraSetup
    setupRequired(spdlog v1_8_2 -q +e20:+debug)
    setupRequired(root v6_22_08d -q +e20:+p392:+debug)
    setupRequired(boost v1_75_0 -q +e20:+debug)
    setupRequired(jsoncpp v1_7_7e -q +e20:+debug)
    setupRequired(jsonnet v0_17_0a -q +e20:+debug)
    setupRequired(tbb v2021_1_1 -q +e20)
    setupRequired(hdf5 v1_12_0b -q +e20:+debug)
    setupRequired(gcc v9_3_0)

Flavor = ANY
Qualifiers = "e19:prof"

  Action = DefineFQ
    envSet (WIRECELL_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-e19-prof)

  Action = ExtraSetup
    setupRequired(spdlog v1_8_2 -q +e19:+prof)
    setupRequired(root v6_22_08d -q +e19:+p392:+prof)
    setupRequired(boost v1_75_0 -q +e19:+prof)
    setupRequired(jsoncpp v1_7_7e -q +e19:+prof)
    setupRequired(jsonnet v0_17_0a -q +e19:+prof)
    setupRequired(tbb v2021_1_1 -q +e19)
    setupRequired(hdf5 v1_12_0b -q +e19:+prof)
    setupRequired(gcc v8_2_0)

Flavor = ANY
Qualifiers = "e19:debug"

  Action = DefineFQ
    envSet (WIRECELL_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-e19-debug)

  Action = ExtraSetup
    setupRequired(spdlog v1_8_2 -q +e19:+debug)
    setupRequired(root v6_22_08d -q +e19:+p392:+debug)
    setupRequired(boost v1_75_0 -q +e19:+debug)
    setupRequired(jsoncpp v1_7_7e -q +e19:+debug)
    setupRequired(jsonnet v0_17_0a -q +e19:+debug)
    setupRequired(tbb v2021_1_1 -q +e19)
    setupRequired(hdf5 v1_12_0b -q +e19:+debug)
    setupRequired(gcc v8_2_0)

Common:
   Action=setup
      proddir()
      setupenv()
      ExeActionRequired(DefineFQ)
      envSet (WIRECELL_VERSION, ${UPS_PROD_VERSION} )
      # define the include directory
      envSet (WIRECELL_INC, ${WIRECELL_FQ_DIR}/include)
      # add the lib directory to LD_LIBRARY_PATH
      if    ( sh -c 'for dd in lib;do [ -d ${WIRECELL_FQ_DIR}/$dd ] && exit;done;exit 1' )
          envSet( WIRECELL_LIB, ${WIRECELL_FQ_DIR}/lib )
      endif ( sh -c 'for dd in lib;do [ -d ${WIRECELL_FQ_DIR}/$dd ] && exit;done;exit 1' )
      if    ( sh -c 'for dd in lib64;do [ -d ${WIRECELL_FQ_DIR}/$dd ] && exit;done;exit 1' )
          envSet( WIRECELL_LIB, ${WIRECELL_FQ_DIR}/lib64 )
      endif ( sh -c 'for dd in lib64;do [ -d ${WIRECELL_FQ_DIR}/$dd ] && exit;done;exit 1' )
      if ( test `uname` = "Darwin" )
        envPrepend(DYLD_LIBRARY_PATH, ${WIRECELL_LIB})
      else()
        envPrepend(LD_LIBRARY_PATH, ${WIRECELL_LIB})
      endif ( test `uname` = "Darwin" )
      # add the bin directory to the path
      pathPrepend(PATH, ${WIRECELL_FQ_DIR}/bin )
      # wirecell path
      pathPrepend (WIRECELL_PATH, ${WIRECELL_FQ_DIR}/share/wirecell)
      # useful variables
      envPrepend(ROOT_INCLUDE_PATH, ${WIRECELL_INC} )
      envPrepend(CMAKE_PREFIX_PATH, ${WIRECELL_FQ_DIR} )
      envPrepend(PKG_CONFIG_PATH, ${WIRECELL_FQ_DIR} )
      # requirements
      exeActionRequired(ExtraSetup)
      setupRequired(eigen v3_3_9a)
      setupRequired(h5cpp v1_10_4_6c)

End:
