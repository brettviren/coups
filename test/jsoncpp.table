File=Table
Product=jsoncpp

#*************************************************
# Starting Group definition
Group:

Flavor=ANY
Qualifiers=c7:prof

  Action=DefineFQ
    envSet (JSONCPP_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-c7-prof)

  Action = ExtraSetup
    setupRequired( clang v7_0_0 )

Flavor=ANY
Qualifiers=c7:debug

  Action=DefineFQ
    envSet (JSONCPP_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-c7-debug)

  Action = ExtraSetup
    setupRequired( clang v7_0_0 )

Flavor=ANY
Qualifiers=e20:prof

  Action=DefineFQ
    envSet (JSONCPP_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-e20-prof)

  Action = ExtraSetup
    setupRequired( gcc v9_3_0 )

Flavor=ANY
Qualifiers=e20:debug

  Action=DefineFQ
    envSet (JSONCPP_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-e20-debug)

  Action = ExtraSetup
    setupRequired( gcc v9_3_0 )

Flavor=ANY
Qualifiers=e19:prof

  Action=DefineFQ
    envSet (JSONCPP_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-e19-prof)

  Action = ExtraSetup
    setupRequired( gcc v8_2_0 )

Flavor=ANY
Qualifiers=e19:debug

  Action=DefineFQ
    envSet (JSONCPP_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-e19-debug)

  Action = ExtraSetup
    setupRequired( gcc v8_2_0 )

Common:
   Action=setup
      setupenv()
      proddir()
      ExeActionRequired(DefineFQ)
      envSet(JSONCPP, ${UPS_PROD_DIR})
      envSet(JSONCPP_VERSION, ${UPS_PROD_VERSION})
      # add the lib directory to LD_LIBRARY_PATH
      envSet(JSONCPP_LIB, ${JSONCPP_FQ_DIR}/lib)
      envSet(JSONCPP_INC, ${JSONCPP_FQ_DIR}/include)
      if ( test `uname` = "Darwin" )
	envPrepend(DYLD_LIBRARY_PATH, ${JSONCPP_FQ_DIR}/lib)
       else()
	envPrepend(LD_LIBRARY_PATH, ${JSONCPP_FQ_DIR}/lib)
      endif ( test `uname` = "Darwin" )
      pathPrepend(PATH, ${JSONCPP_FQ_DIR}/bin)
      # requirements
      exeActionRequired(ExtraSetup)
End:
# End Group definition
#*************************************************
